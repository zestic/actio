name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.3', '8.4']

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: actio_test
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test
          POSTGRES_USER: test
          POSTGRES_PASSWORD: password1
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: pdo, pdo_mysql, pdo_pgsql
        coverage: pcov
        tools: composer:v2

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Set up test environment
      run: |
        cat > .env.testing << EOL
        ACTIO_MYSQL_HOST=127.0.0.1
        ACTIO_MYSQL_DB_NAME=actio_test
        ACTIO_MYSQL_USERNAME=root
        ACTIO_MYSQL_PASSWORD=root

        ACTIO_PG_HOST=localhost
        ACTIO_PG_DB_NAME=test
        ACTIO_PG_SCHEMA=actio_test
        ACTIO_PG_USERNAME=test
        ACTIO_PG_PASSWORD=password1
        EOL

    - name: Verify MySQL connection
      run: |
        mysql --host 127.0.0.1 -uroot -proot -e "SHOW DATABASES;"

    - name: Set up PostgreSQL schema
      run: |
        PGPASSWORD=password1 psql -h localhost -U test -d test -c "CREATE SCHEMA IF NOT EXISTS actio_test;"

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Run Static Analysis
      run: vendor/bin/phpstan analyse

    - name: Run Tests with Coverage
      run: vendor/bin/phpunit --coverage-clover coverage.xml
      env:
        ACTIO_MYSQL_HOST: 127.0.0.1
        ACTIO_MYSQL_DB_NAME: actio_test
        ACTIO_MYSQL_USERNAME: root
        ACTIO_MYSQL_PASSWORD: root
        ACTIO_PG_HOST: localhost
        ACTIO_PG_DB_NAME: test
        ACTIO_PG_SCHEMA: actio_test
        ACTIO_PG_USERNAME: test
        ACTIO_PG_PASSWORD: password1


